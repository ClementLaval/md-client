import { compile } from 'json-schema-to-typescript';
import fs from 'fs';
import { JSONSchema4 } from 'json-schema';
import { loadConfig } from '../config/load';
import { Logger } from '../utillities/logger';

export async function generateTypes(): Promise<void> {
  const outputFile = 'generated-types.ts';
  const config = await loadConfig();

  // TODO : remove
  const jsonSchema: JSONSchema4 = {
    title: 'Example Schema',
    type: 'object',
    properties: {
      firstName: {
        type: 'string',
      },
      lastName: {
        type: 'string',
      },
      age: {
        description: 'Age in years',
        type: 'integer',
        minimum: 0,
      },
      hairColor: {
        enum: ['black', 'brown', 'blue'],
        type: 'string',
      },
    },
    additionalProperties: false,
    required: ['firstName', 'lastName'],
  };

  Logger.info('Compiling TS types for Collections and Globals...');

  compile(jsonSchema, 'Config', {
    bannerComment:
      '/* tslint:disable */\n/* eslint-disable */\n/**\n* This file was automatically generated by md-client.\n* DO NOT MODIFY IT BY HAND. Instead, modify your source md-client config,\n* and re-run `md-client generate:types` to regenerate this file.\n*/',
    style: {
      singleQuote: true,
    },
    unreachableDefinitions: true,
  }).then((ts) => {
    fs.writeFileSync(outputFile, ts);
    Logger.info(`Types written to ${outputFile}`);
  });
}
